#!/bin/bash -eu

## Tim Dadd - June 2020
## This script generates the local gRPC go file
## and also generally initialises this directory
## Start by defining a pb file in the root pb directory
## and then editing the pb_file environment variable on
## the next line

## Now you're ready to write main.go etc.

pb_file="route_guide"
pb_dir="../../pb"
lpb_dir="genpb"
RED=$(tput setaf 1)
GREEN=$(tput setaf 2)
WHITE=$(tput setaf 7)
YELLOW=$(tput setaf 3)
CYAN=$(tput setaf 6)

if [ ! -d ../../services ]; then
  echo "${RED}This needs to be run from a microservice directory$WHITE"
  exit 1
fi

pb_df=$pb_dir/$pb_file.proto
if [ ! -f $pb_df ]; then
  echo "${RED}No protobuf definition file found at $pb_df$WHITE"
  exit 1
fi

function whatdir() {
  # $(whereis -b $1 | sed -n -e 's/^$1: //p') - this doesn't get first location
  w="whereis -b $1 | sed -ne 's/^\($1: \)\([/|a-z]*\)$1\(.*\)$/\2/p'"
  bash -c "$w"
}

## Is protoc installed somewhere?  This gets the first directory where it exists
#protocLocation=$(whereis -b protoc | sed -ne 's/^\(protoc: \)\([/|a-z]*\)protoc\(.*\)$/\2/p')
protocLocation=$(whatdir protoc)
if [ "$protocLocation" = "" ]; then
  echo "${RED}YOU MUST INSTALL PROTOC, CHECK https://github.com/protocolbuffers/protobuf/releases$WHITE"
  exit 1
fi

function install_protogen() {
    ## Is the file already installed somewhere
  if [ "$(whatdir $2)" != "" ]; then return; fi
  echo "${GREEN}Found protoc at $CYAN$protocLocation"
  echo "${YELLOW}Installing $2$WHITE"
    ## Load the executable into GOBIN
  go install google.golang.org/$1/cmd/$2
    ## Can we see the program now?
  if [ "$(whatdir $2)" != "" ]; then return; fi

  ## Dig it out of GOBIN and install in the same location as protoc
  gobin=$(go env GOBIN)
  if [ "$gobin" = "" ]; then gobin="$HOME/go/bin"; fi
  echo "GOBIN=$gobin"
  pgc="$gobin/$2"
  if [ ! -f $pgc ]; then
    echo "${RED}Cannot find $2 in $gobin!!!, Sorry you have to install yourself$WHITE}"
    exit 1
  fi
  cp $pgc $protocLocation
    ## Can we see it now?
  if [ "$(whatdir $2)" = "" ]; then
    echo "${RED}You must install $2 in a location where it can be found with $YELLOWwhereis$WHITE}"
    exit 1
  fi
}

  ## Are the go protoc-gen files installed?
install_protogen protobuf protoc-gen-go
install_protogen grpc protoc-gen-go-grpc

## OK now for the stuff specific to this microservice
servicename=${PWD##*/}

if [ ! -d ./$lpb_dir ]; then
  echo "${GREEN}Creating $lpb_dir directory$WHITE"
  mkdir $lpb_dir
  cd $lpb_dir
  go mod init
  servicename=${PWD##*/}
  go mod edit -module $servicename
  cd ..
fi

## Does this directory have the lib files?
if [ ! -d ./lib ]; then
  echo "${GREEN}Copying the lib directory$WHITE"
  cp -r ../../lib .
fi

## do we have a go.mod file - could be a new project
if [ ! -f go.mod ]; then
  echo "${YELLOW}Creating a go.mod file for service $GREEN$servicename$WHITE"
  go mod init
  go mod edit -module $servicename
  go mod edit -replace pb@v0.0.0=./$lpb_dir
  go mod edit -replace lib/utils@v0.0.0=./lib/utils
  go mod edit -require pb@v0.0.0
  go mod edit -require lib/utils@v0.0.0
  go get -u google.golang.org/protobuf/proto
  echo $CYAN
  cat go.mod
  echo $WHITE
fi

## pb generation - needed for structures
protoc -I=$pb_dir $pb_df --go_out=$lpb_dir

## grpc generation - needed for rpc comms
protoc -I=$pb_dir $pb_df --go-grpc_out=$lpb_dir

## Show what's been done
i=1
pb_gen_files=($lpb_dir/*.pb.go)
for f in "${pb_gen_files[@]}"
do
  colour=$(tput setaf $i)
  echo $colour
  echo $f
  l="$(grep -n "Code generated by" $f | head -n 1 | cut -d: -f1)"
  lines="-5"
  if [ "$l" = "1" ]; then lines="-3" ; fi
  l=$((l-lines-1))
  head -n $l $f | tail $lines
  i=$((i+1))
done
echo $WHITE
